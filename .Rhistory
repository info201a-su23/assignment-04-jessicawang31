geom_smooth(aes(y = male_prison_pop, color = "Male"), method = lm, se = FALSE, na.rm = TRUE) +
geom_point(aes(y = female_prison_pop), na.rm = TRUE) +
geom_smooth(aes(y = female_prison_pop, color = "Female"), method = lm, se = FALSE, linetype = "dashed", na.rm = TRUE) +
labs(title = "Trend of Black Males vs. Black Females in Prison in King County,
WA the last 10 Years",
x = "Years",
y = "Prison Population",
color = "Gender") +
scale_color_manual(values = c("Male" = "yellow", "Female" = "purple")) +
theme_bw()
black_prison_trend_scatterplot
library(ggplot2)
library(dplyr)
library(tidyr)
filtered_data <- data %>%
filter(year == min(data$year, na.rm = TRUE) | year == max(data$year, na.rm = TRUE)) %>%
replace_na(list(total_prison_pop = 0, black_prison_pop = 0))
filtered_data_min <- filtered_data %>%
filter(year == min(filtered_data$year, na.rm = TRUE))
filtered_data_max <- filtered_data %>%
filter(year == max(filtered_data$year, na.rm = TRUE))
black_prison_comp_df <- data.frame(
year = factor(filtered_data$year),
population_type = c("Total Population", "Total Population", "Black Population", "Black Population"),
population_amount = c(filtered_data_min$total_prison_pop,
filtered_data_min$black_prison_pop,
filtered_data_max$total_prison_pop,
filtered_data_max$black_prison_pop)
)
black_prison_comp_dbar_graph <- ggplot(black_prison_comp_df, aes(x = year, y = population_amount, fill = population_type)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Total Population vs. Black Population in Prison in 1970 vs. 2018",
x = "Year",
y = "Population Amount",
fill = "Population Type") +
scale_fill_manual(values = c("lavender", "yellow"),
labels = c("Total Population", "Black Population")) +
theme_bw()
black_prison_comp_dbar_graph
library(ggplot2)
library(dplyr)
library(tidyr)
filtered_data <- data %>%
filter(year == min(data$year, na.rm = TRUE) | year == max(data$year, na.rm = TRUE)) %>%
replace_na(list(total_prison_pop = 0, black_prison_pop = 0))
filtered_data_min <- filtered_data %>%
filter(year == min(filtered_data$year, na.rm = TRUE))
filtered_data_max <- filtered_data %>%
filter(year == max(filtered_data$year, na.rm = TRUE))
black_prison_comp_df <- data.frame(
year = factor(filtered_data$year),
population_type = c("Total Population", "Total Population", "Black Population", "Black Population"),
population_amount = c(filtered_data_min$total_prison_pop,
filtered_data_min$black_prison_pop,
filtered_data_max$total_prison_pop,
filtered_data_max$black_prison_pop)
)
black_prison_comp_dbar_graph <- ggplot(black_prison_comp_df, aes(x = year, y = population_amount, fill = population_type)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Total Population vs. Black Population in Prison in 1970 vs. 2018",
x = "Year",
y = "Population Amount",
fill = "Population Type") +
scale_fill_manual(values = c("purple", "yellow"),
labels = c("Total Population", "Black Population")) +
theme_bw()
black_prison_comp_dbar_graph
library(ggplot2)
library(maps)
us_map <- map_data("state")
us_map <- merge(us_map, data, by.x = "region", by.y = "State", all.x = TRUE)
library(ggplot2)
library(maps)
us_map <- map_data("state")
us_map <- merge(us_map, data, by.x = "county", by.y = "state", all.x = TRUE)
library(ggplot2)
library(maps)
us_map <- map_data("state")
us_map <- merge(us_map, data, by.x = "region", by.y = "state", all.x = TRUE)
ggplot(data = us_map, aes(x = long, y = lat, group = group, fill = data$total_prison_pop)) +
geom_polygon(fill = "black", color = "white") +
scale_fill_gradient(name = "Total Prison Population", low = "white", high = "purple") +
coord_fixed(1.3) +
theme_void() +
labs(title = "Total Prison Population in the U.S. in 2018")
us_map
library(ggplot2)
library(maps)
us_map <- map_data("state")
us_map <- merge(us_map, data, by.x = "region", by.y = "state", all.x = TRUE)
ggplot(data = us_map, aes(x = long, y = lat, group = group, fill = data$total_prison_pop)) +
geom_polygon(fill = "black", color = "white") +
scale_fill_gradient(name = "Total Prison Population", low = "white", high = "purple") +
coord_map() +
theme_void() +
labs(title = "Total Prison Population in the U.S. in 2018")
library(ggplot2)
library(maps)
us_map <- map_data("state")
us_map <- merge(us_map, data, by.x = "region", by.y = "state", all.x = TRUE)
ggplot(data = us_map, aes(x = long, y = lat, group = group, fill = data$total_prison_pop)) +
geom_polygon(fill = "black", color = "white") +
scale_fill_gradient(name = "Total Average Prison Population", low = "lightpurple", high = "darkpurple") +
coord_fixed(1.3) +
theme_void() +
labs(title = "Total Average Prison Population in the U.S. in 2018")
library(ggplot2)
library(maps)
us_map <- map_data("state")
us_map <- merge(us_map, data, by.x = "region", by.y = "state", all.x = TRUE)
ggplot(data = us_map, aes(x = long, y = lat, group = group, fill = data$total_prison_pop)) +
geom_polygon(fill = "black", color = "white") +
scale_fill_gradient(name = "Total Average Prison Population", low = "white", high = "purple") +
coord_fixed(1.3) +
theme_void() +
labs(title = "Total Average Prison Population in the U.S. in 2018")
us_map
library(ggplot2)
library(maps)
us_map <- map_data("state")
us_map <- merge(us_map, data, by.x = "region", by.y = "state", all.x = TRUE)
ave_state_prison_pop <- aggregate(total_prison_pop ~ state, data = data, FUN = mean)
ggplot(data = us_map, ave_state_prison_pop, aes(x = long, y = lat, group = group, fill = data$total_prison_pop)) +
geom_polygon(fill = "black", color = "white") +
scale_fill_gradient(name = "Total Average Prison Population", low = "white", high = "purple") +
coord_fixed(1.3) +
theme_void() +
labs(title = "Total Average Prison Population in the U.S. in 2018")
library(ggplot2)
library(maps)
ave_state_prison_pop <- aggregate(total_prison_pop ~ state, data = data, FUN = mean)
us_map <- map_data("state")
us_map <- merge(us_map, ave_state_prison_pop, by.x = "region", by.y = "state", all.x = TRUE)
ggplot(data = us_map, aes(x = long, y = lat, group = group, fill = data$total_prison_pop)) +
geom_polygon(fill = "black", color = "white") +
scale_fill_gradient(name = "Total Average Prison Population", low = "white", high = "purple") +
coord_fixed(1.3) +
theme_void() +
labs(title = "Total Average Prison Population in the U.S. in 2018")
us_map
library(ggplot2)
library(maps)
filtered_data <- data %>%
filter(year == max(dataa$year, na.rm = TRUE))
library(ggplot2)
library(maps)
filtered_data <- data %>%
filter(year == max(dataa$year, na.rm = TRUE))
filtered_data <- data %>%
filter(year == max(dataa$year, na.rm = TRUE))
filtered_data <- data %>%
filter(year == max(data$year, na.rm = TRUE))
library(ggplot2)
library(maps)
filtered_data <- data %>%
filter(year == max(data$year, na.rm = TRUE))
ave_state_prison_pop <- aggregate(total_prison_pop ~ state, data = filtered_data, FUN = mean)
library(ggplot2)
library(maps)
filtered_data <- data %>%
filter(year == max(data$year))
ave_state_prison_pop <- aggregate(total_prison_pop ~ state, data = filtered_data, FUN = mean)
library(ggplot2)
library(maps)
library(dplyr)  # Assuming you're using dplyr for the data manipulation
filtered_data <- data %>%
filter(year == max(data$year))
ave_state_prison_pop <- aggregate(total_prison_pop ~ state, data = filtered_data, FUN = mean)
black_prison_comp_df <- data.frame(
year = factor(filtered_data$year),
population_type = c("Total Population", "Total Population", "Black Population", "Black Population"),
population_amount = c(filtered_data_min$total_prison_pop,
filtered_data_min$black_prison_pop,
filtered_data_max$total_prison_pop,
filtered_data_max$black_prison_pop)
)
library(ggplot2)
library(maps)
library(dplyr)
filtered_data <- data %>%
filter(year == max(data$year))
ave_state_prison_pop <- aggregate(total_prison_pop ~ state, data = filtered_data, FUN = mean)
View(filtered_data)
View(data)
library(ggplot2)
library(maps)
library(dplyr)
ave_state_prison_pop <- aggregate(total_prison_pop ~ state, data = filtered_data, FUN = mean)
source("~/Desktop/Info201Code/assignment-04-jessicawang31/map_example.R")
shiny::runApp('Desktop/Info201Code/assignment-05-jessicawang31/CO_Climate_Change_App')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal/info201_final_app')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal/info201_final_app')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal/info201_final_app')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal/info201_final_app')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal/info201_final_app')
data <- read.csv("maryland_crash_report.csv")
View(data)
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal/info201_final_app')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal/info201_final_app')
data <- read.csv("maryland_crash_report.csv")
data <- read.csv("maryland_crash_report.csv")
data <- read.csv("maryland_crash_report.csv")
data <- read.csv("https://data.montgomerycountymd.gov/api/views/mmzv-x632/rows.csv?accessType=DOWNLOAD")
View(data)
data <- read.csv("maryland_crash_report.csv")
View(data)
shiny::runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
shiny::runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
runApp('Desktop/Info201Code/assignment-05-jessicawang31/CO_Climate_Change_App')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
runApp('Desktop/Info201Code/assignment-05-jessicawang31/CO_Climate_Change_App')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
runApp('Desktop/Info201Code/assignment-05-jessicawang31/CO_Climate_Change_App')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal/info201_final_ui_server')
server <- function(input, output) {
filtered_data <- reactive({
data %>%
filter(Year >= input$yearRange[1], Year <= input$yearRange[2])
})
output$collision_bargraph <- renderPlotly({
collision_occurance <- table(filtered_data()$Collision.Type)
collision_occurance_df <- as.data.frame(collision_occurance)
colnames(collision_occurance_df) <- c("Collision Type", "Count")
collision_graph <- ggplot(collision_occurance_df, aes(x = `Collision Type`, y = Count)) +
geom_bar(stat = "identity", fill = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Occurrence of Collision Types", x = "Collision Type", y = "Count")
ggplotly(collision_graph)
})
output$range <- renderPrint({
input$yearRange
})
}
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal/info201_final_ui_server')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal/info201_final_ui_server')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
shiny::runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
runApp('Desktop/Info201Code/final-deliverable-p03-mehasingal')
library(dplyr)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
library(dplyr)
data <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/us-prison-pop.csv")
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
print(black_average_population)
max_value <- max(data$black_prison_pop, na.rm = TRUE)
highest_incarceration_counties <- data %>%
filter(black_prison_pop == max_value)
print(highest_incarceration_counties)
lowest_incarceration_county <- data %>%
arrange(black_prison_pop) %>%
head(1)
print(lowest_incarceration_county)
current_year <- max(data$year)
my_county <- "King County"
my_state <- "WA"
last_ten_years <- current_year - 10
filtered_data <- data %>%
filter(state == my_state & county_name == my_county) %>%
filter(year >= last_ten_years & year <= current_year)
non_na_values <- sum(!is.na(filtered_data$black_male_prison_pop))
if (non_na_values > 0) {
max_value <- max(filtered_data$black_male_prison_pop, na.rm = TRUE)
min_value <- min(filtered_data$black_male_prison_pop, na.rm = TRUE)
change_over_years <- max_value - min_value
print(change_over_years)
}
current_year <- max(data$year)
my_county <- "King County"
my_state <- "WA"
last_ten_years <- current_year - 10
filtered_data <- data %>%
filter(state == my_state & county_name == my_county) %>%
filter(year >= last_ten_years & year <= current_year)
non_na_values <- sum(!is.na(filtered_data$black_female_prison_pop))
if (non_na_values > 0) {
max_value <- max(filtered_data$black_female_prison_pop, na.rm = TRUE)
min_value <- min(filtered_data$black_female_prison_pop, na.rm = TRUE)
change_over_years <- max_value - min_value
print(change_over_years)
}
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
print(black_average_population)
library(dplyr)
data <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/us-prison-pop.csv")
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
print(black_average_population)
max_value <- max(data$black_prison_pop, na.rm = TRUE)
highest_incarceration_counties <- data %>%
filter(black_prison_pop == max_value)
print(highest_incarceration_counties)
lowest_incarceration_county <- data %>%
arrange(black_prison_pop) %>%
head(1)
print(lowest_incarceration_county)
current_year <- max(data$year)
my_county <- "King County"
my_state <- "WA"
last_ten_years <- current_year - 10
filtered_data <- data %>%
filter(state == my_state & county_name == my_county) %>%
filter(year >= last_ten_years & year <= current_year)
non_na_values <- sum(!is.na(filtered_data$black_male_prison_pop))
if (non_na_values > 0) {
max_value <- max(filtered_data$black_male_prison_pop, na.rm = TRUE)
min_value <- min(filtered_data$black_male_prison_pop, na.rm = TRUE)
change_over_years <- max_value - min_value
print(change_over_years)
}
current_year <- max(data$year)
my_county <- "King County"
my_state <- "WA"
last_ten_years <- current_year - 10
filtered_data <- data %>%
filter(state == my_state & county_name == my_county) %>%
filter(year >= last_ten_years & year <= current_year)
non_na_values <- sum(!is.na(filtered_data$black_female_prison_pop))
if (non_na_values > 0) {
max_value <- max(filtered_data$black_female_prison_pop, na.rm = TRUE)
min_value <- min(filtered_data$black_female_prison_pop, na.rm = TRUE)
change_over_years <- max_value - min_value
print(change_over_years)
}
print(black_average_population)
View(black_average_population)
print(highest_incarceration_counties)
View(highest_incarceration_counties)
View(lowest_incarceration_county)
current_year <- max(data$year)
my_county <- "King County"
my_state <- "WA"
last_ten_years <- current_year - 10
filtered_data <- data %>%
filter(state == my_state & county_name == my_county) %>%
filter(year >= last_ten_years & year <= current_year)
non_na_values <- sum(!is.na(filtered_data$black_male_prison_pop))
if (non_na_values > 0) {
max_value <- max(filtered_data$black_male_prison_pop, na.rm = TRUE)
min_value <- min(filtered_data$black_male_prison_pop, na.rm = TRUE)
change_over_years <- max_value - min_value
print(change_over_years)
}
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
print(max(black_average_population, na.rm = TRUE))
View(black_average_population)
print(max(total_black_average_population, na.rm = TRUE))
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
max_population_row <- black_average_population[which.max(black_average_population$total_black_average_population), ]
print(max_population_row)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE)) %>%
filter(!is.nan(total_black_average_population)) # Remove rows with NaN values
max_population <- max(black_average_population$total_black_average_population)
max_population_row <- black_average_population %>%
filter(total_black_average_population == max_population)
print(max_population_row)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
max_black_average_population <- max(black_average_population$total_black_average_population)
max_black_average_population_row <- black_average_population %>%
filter(total_black_average_population == max_black_average_population)
print(max_black_average_population_row)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
max_black_average_population <- max(black_average_population$total_black_average_population)
max_black_average_population_row <- black_average_population %>%
filter(total_black_average_population == max_black_average_population)
print(max_black_average_population_row)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
max_population <- max(black_average_population$total_black_average_population)
max_population_row <- black_average_population %>%
filter(total_black_average_population == max_population)
print(max_population_row)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
max_population <- max(black_average_population$total_black_average_population)
max_population_row <- black_average_population %>%
filter(total_black_average_population == max_population)
print(max_population_row)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
library(dplyr)
data <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/us-prison-pop.csv")
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
max_population <- max(black_average_population$total_black_average_population)
max_population_row <- black_average_population %>%
filter(total_black_average_population == max_population)
print(max_population_row)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
max_population <- max(black_average_population$total_black_average_population)
max_population_row <- black_average_population %>%
filter(total_black_average_population == max_population)
print(max_population_row)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
max_population <- max(black_average_population$total_black_average_population)
max_population_row <- black_average_population %>%
filter(total_black_average_population == max_population)
print(max_population_row)
library(dplyr)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE)) %>%
filter(!is.nan(total_black_average_population)) # Remove rows with NaN values
max_population <- max(black_average_population$total_black_average_population)
max_population_row <- black_average_population %>%
filter(total_black_average_population == max_population)
print(max_population_row)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE))
max_population <- max(black_average_population$total_black_average_population)
max_population_row <- black_average_population %>%
filter(total_black_average_population == max_population)
print(max_population_row)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE)) %>%
filter(!is.nan(total_black_average_population))
max_black_average_population <- max(black_average_population$total_black_average_population)
max_black_average_population_row <- black_average_population %>%
filter(total_black_average_population == max_black_average_population)
print(max_black_average_population_row)
View(double_bar_graph)
View(filtered_data_min)
setwd("~/Desktop/22-23 school/Info201Code/assignment-04-jessicawang31")
black_average_population_function <- function() {
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE)) %>%
filter(!is.nan(total_black_average_population))
max_black_average_population <- max(black_average_population$total_black_average_population)
max_black_average_population_row <- black_average_population %>%
filter(total_black_average_population == max_black_average_population)
print(max_black_average_population_row)
}
return max_black_average_population_row
black_average_population_function <- function() {
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE)) %>%
filter(!is.nan(total_black_average_population))
max_black_average_population <- max(black_average_population$total_black_average_population)
max_black_average_population_row <- black_average_population %>%
filter(total_black_average_population == max_black_average_population)
return max_black_average_population_row
black_average_population_function <- function() {
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE)) %>%
filter(!is.nan(total_black_average_population))
max_black_average_population <- max(black_average_population$total_black_average_population)
max_black_average_population_row <- black_average_population %>%
filter(total_black_average_population == max_black_average_population)
return(max_black_average_population_row)
}
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE)) %>%
filter(!is.nan(total_black_average_population))
library(dplyr)
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE)) %>%
filter(!is.nan(total_black_average_population))
max_black_average_population <- max(black_average_population$total_black_average_population)
max_black_average_population_row <- black_average_population %>%
filter(total_black_average_population == max_black_average_population)
print(max_black_average_population_row)
black_average_population_function <- function() {
black_average_population <- data %>%
group_by(county_name) %>%
summarize(total_black_average_population = mean(black_prison_pop, na.rm = TRUE)) %>%
filter(!is.nan(total_black_average_population))
max_black_average_population <- max(black_average_population$total_black_average_population)
max_black_average_population_row <- black_average_population %>%
filter(total_black_average_population == max_black_average_population)
return(max_black_average_population_row)
}
setwd("~/Desktop/22-23 school/Info201Code/assignment-04-jessicawang31")
setwd("~/Desktop/22-23 school/Info201Code/assignment-04-jessicawang31")
